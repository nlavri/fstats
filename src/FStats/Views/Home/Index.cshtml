@using FStats.Controllers
@using FStats.Entities
@model FStats.Models.StatsViewModel

@{
    ViewData["Title"] = "Footbal Stats";
    var propsToView = HomeController.PropertyInfos.Where(x => HomeController.FixedProps.Contains(x.Name) ||
                    Model.StatsProps.Contains(x.Name) || Model.OddsProps.Contains(x.Name)).ToList();
}
<div>
    <form method="GET" action="@Url.Action("Index", "Home")" class="form-horizontal" id="form">
        <div class="modal fade" tabindex="-1" role="dialog" id="statsModal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Statistics</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-xs-12">
                                @foreach (var stat in HomeController.StatsProps)
                                {
                                    <div class="checkbox">
                                        <label class="" title="@HomeController.PropertyInfosSelect.First(x => x.Value == stat).Text">
                                            <input type="checkbox" name="@nameof(Model.StatsProps)" value="@stat" @(Model.StatsProps.Contains(stat) ? "checked=\"checked\"" : string.Empty) />
                                            @HomeController.PropertyInfosSelect.First(x => x.Value == stat).Text
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Load</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>
        <div class="modal fade" tabindex="-1" role="dialog" id="filtersModal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Filters</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-xs-12">
                                @foreach (var stat in HomeController.Filters)
                                {
                                    var selected = Model.Filter.HasFlag(stat.Key);
                                    <div class="checkbox">
                                        <label class="" title="">
                                            <input type="checkbox" name="Filter" value="@stat.Key.ToString()" @(selected == true ? "checked=\"checked\"" : string.Empty) />
                                            @stat.Value
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="row" >
                            <div class="col-xs-12">
                                <div id="progress" class="progress">
                                    <div id="bar" class="progress-bar-striped active"></div>
                                </div>
                            </div>
                        </div>
                        </div>
                    <div class="modal-footer">
                        <button type="button" id="process" class="btn btn-primary">Process</button>
                        <button type="button" id="clear" class="btn btn-info">Clear filter</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>
        <div class="modal fade" tabindex="-1" role="dialog" id="oddsModal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Odds</h4>
                    </div>
                    <div class="modal-body">

                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Load</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>
        <div class="form-group">
        </div>
        <div class="form-group">
            <div class="col-md-3">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#statsModal">
                    Statistics
                </button>
                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                    Odds
                </button>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#filtersModal">
                    Filters
                </button>
            </div>
            <div class="col-md-4">
                @Html.DropDownList("OrderBy", (IList<SelectListItem>)ViewBag.OrderOptions, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group collapse" id="collapseExample">
            <div class="cbox-wrap form-group">
                @{ int i = 0;}

                @{
                    var enumerable = HomeController.OddsProps.Select(x => new { Index = i++, x }).ToList();
                }
                <ul class="list-inline">
                    @foreach (var statGroup in enumerable.GroupBy(x => x.Index / 10))
                    {
                        <li class="cbox-row">
                            @foreach (var stat in statGroup)
                            {
                                <div class="checkbox">
                                    <label title="@HomeController.PropertyInfosSelect.First(x => x.Value == stat.x).Text">
                                        <input type="checkbox" name="@nameof(Model.StatsProps)" value="@stat.x" @(Model.StatsProps.Contains(stat.x) ? "checked=\"checked\"" : string.Empty) />
                                        @HomeController.PropertyInfosSelect.First(x => x.Value == stat.x).Text
                                    </label>
                                </div>
                            }
                        </li>

                    }
                </ul>
            </div>
            <button type="submit" class="btn btn-primary">Load </button>
        </div>
        <div class="table-responsive">
            <table class="table table-striped">
                <tr>
                    @foreach (var prop in propsToView)
                    {
                        <th title="@HomeController.PropertyInfosSelect.First(x => x.Value == prop.Name).Text">@prop.Name</th>
                    }
                </tr>

                @foreach (var stat in Model.Stats)
                {
                    <tr>
                        @foreach (var prop in propsToView)
                        {
                            <td>
                                @if (prop.Name == nameof(Statistic.Date))
                                {
                                    @(((DateTime?)prop.GetValue(stat))?.ToString("dd/MM/yy"))
                                }
                                else if (prop.Name == nameof(Statistic.HomeTeam) || prop.Name == nameof(Statistic.AwayTeam))
                                {
                                    <a tabindex="0" class="btn btn-xs btn-default" role="button" data-toggle="popover" data-trigger="focus"
                                       title="@prop.GetValue(stat) Stats" data-team="@prop.GetValue(stat)" data-html="true"
                                       data-content="Loading...">
                                        <span class="glyphicon glyphicon-th-list" aria-hidden="true"></span>
                                    </a>
                                    @prop.GetValue(stat)

                                }
                                else
                                {
                                    @prop.GetValue(stat)
                                }
                            </td>
                        }
                    </tr>
                }
            </table>
            @Html.Partial("_Pager", Model)
        </div>
    </form>
</div>

@section scripts
{
    <script src="~/js/home.js" asp-append-version="true"></script>
}
